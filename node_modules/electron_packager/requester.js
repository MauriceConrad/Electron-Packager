(function() {
  const protocolModules = {
    http: require('http'),
    https: require('https')
  }

  module.exports = {
    get(url, options, callback) {
      request("GET", url, options, callback);
    },
    post(url, options, callback) {
      request("POST", url, options, callback);
    }
  }
  function request(method, url, options, callback) {
    var protocol = url.match(/(https)?:\/\//)[1];
    // Get uri body without protocol and the related syntax '://'
    var uri = url.substring(protocol.length + "://".length);
    var options = {
      method: method,
      host: uri.substring(0, uri.search("/")),
      path: uri.substring(uri.search("/"))
    }
    var req = protocolModules[protocol].request(options, function(response) {
      var binaryData = [];
      response.on("data", function(chunk) {
        binaryData.push(chunk);
      });
      response.on("end", function() {
        var result = Buffer.concat(binaryData);
        callback(null, response, result);
      });
    });
    req.on("error", function(error) {
      callback(error);
    });
    req.end()

  }
})();
